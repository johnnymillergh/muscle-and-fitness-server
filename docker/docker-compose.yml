version: "3.7"

services:
  ################################################################################
  #                           Infrastructure Services                            #
  ################################################################################
  mysql:
    container_name: "${MYSQL_CONTAINER_NAME}"
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: "jm@mysql"
      MYSQL_DATABASE: muscle_and_fitness
      TZ: Asia/Hong_Kong
    ports:
      - "3306:3306"
    restart: always
    volumes:
      - "~/docker-file-mapping/${MYSQL_CONTAINER_NAME}:/var/lib/mysql"
      - ./script/mysql-init-script:/docker-entrypoint-initdb.d
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      muscle_and_fitness_network:

  redis:
    container_name: "${REDIS_CONTAINER_NAME}"
    image: redis:latest
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - "~/docker-file-mapping/${REDIS_CONTAINER_NAME}:/data"
      - ./script/redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      TZ: Asia/Hong_Kong
    command: "redis-server /usr/local/etc/redis/redis.conf"
    networks:
      muscle_and_fitness_network:

  atmoz-sftp:
    container_name: "${ATMOZ_SFTP_CONTAINER_NAME}"
    image: atmoz/sftp:latest
    ports:
      # mapping local machine's port 23 to container port 22
      - "23:22"
    restart: always
    volumes:
      - "~/docker-file-mapping/${ATMOZ_SFTP_CONTAINER_NAME}:/home/johnny/upload"
    environment:
      TZ: Asia/Hong_Kong
    command: "johnny:atmoz@sftp:::upload"
    networks:
      muscle_and_fitness_network:

  zipkin-mysql:
    image: openzipkin/zipkin-mysql
    container_name: "${ZIPKIN_MYSQL_CONTAINER_NAME}"
    restart: always
    networks:
      muscle_and_fitness_network:

  zipkin-dependencies:
    image: openzipkin/zipkin-dependencies
    container_name: "${ZIPKIN_DEPENDENCIES_CONTAINER_NAME}"
    entrypoint: crond -f
    environment:
      # Uncomment to see dependency processing logs
      ZIPKIN_LOG_LEVEL: DEBUG
      STORAGE_TYPE: mysql
      MYSQL_HOST: "${ZIPKIN_MYSQL_CONTAINER_NAME}"
      MYSQL_USER: zipkin
      MYSQL_PASS: zipkin
    depends_on:
      zipkin-mysql:
        condition: service_healthy
    restart: always
    networks:
      muscle_and_fitness_network:

  zipkin:
    container_name: "${ZIPKIN_CONTAINER_NAME}"
    image: openzipkin/zipkin
    depends_on:
      zipkin-mysql:
        condition: service_healthy
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    environment:
      STORAGE_TYPE: mysql
      # Point the zipkin at the storage backend
      MYSQL_HOST: "${ZIPKIN_MYSQL_CONTAINER_NAME}"
      MYSQL_USER: zipkin
      MYSQL_PASS: zipkin
      # Uncomment to enable request logging (TRACE shows query values)
      command: --logging.level.com.datastax.oss.driver.internal.core.tracker.RequestLogger=TRACE
      JAVA_OPTS: -Xms128m -Xmx128m -XX:+ExitOnOutOfMemoryError
      TZ: Asia/Hong_Kong
    # Uncomment to enable scribe
    # - SCRIBE_ENABLED=true
    # Uncomment to enable self-tracing
    # - SELF_TRACING_ENABLED=true
    # Uncomment to enable debug logging
    # - JAVA_OPTS=-Dlogging.level.zipkin2=DEBUG
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - 9411:9411
      # Uncomment if you set SCRIBE_ENABLED=true
      # - 9410:9410
    restart: always
    networks:
      muscle_and_fitness_network:

  consul-service-registry:
    container_name: "${CONSUL_SERVICE_REGISTRY_CONTAINER_NAME}"
    hostname: "${CONSUL_SERVICE_REGISTRY_CONTAINER_NAME}"
    image: consul:latest
    depends_on:
      zipkin:
        condition: service_healthy
    ports:
      - "8500:8500"
    restart: always
    volumes:
      - "~/docker-file-mapping/${CONSUL_SERVICE_REGISTRY_CONTAINER_NAME}:/consul/data"
    command: "agent -server -ui -disable-host-node-id -bootstrap-expect=1 -client=0.0.0.0"
    networks:
      muscle_and_fitness_network:

  spring-boot-admin:
    container_name: "${SPRING_BOOT_ADMIN_CONTAINER_NAME}"
    hostname: "${SPRING_BOOT_ADMIN_CONTAINER_NAME}"
    image: "ijohnnymiller/muscle-and-fitness-server.spring-boot-admin:${TAG}"
    depends_on:
      consul-service-registry:
        condition: service_started
    ports:
      - "8761:8761"
    restart: always
    volumes:
      - "~/docker-file-mapping/${SPRING_BOOT_ADMIN_CONTAINER_NAME}:/logs"
    environment:
      JAVA_TOOL_OPTIONS: "${JAVA_TOOL_OPTIONS}"
      TZ: Asia/Hong_Kong
    networks:
      muscle_and_fitness_network:

  ################################################################################
  #                     Microservice of Muscle and Fitness                       #
  ################################################################################
  #                              Business Service                                #
  #------------------------------------------------------------------------------#
  api-gateway:
    container_name: "${API_GATEWAY_CONTAINER_NAME}"
    hostname: "${API_GATEWAY_CONTAINER_NAME}"
    image: "ijohnnymiller/muscle-and-fitness-server.api-gateway:${TAG}"
    depends_on:
      consul-service-registry:
        condition: service_started
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - "~/docker-file-mapping/${API_GATEWAY_CONTAINER_NAME}:/logs"
    environment:
      JAVA_TOOL_OPTIONS: "${JAVA_TOOL_OPTIONS}"
      TZ: Asia/Hong_Kong
    networks:
      muscle_and_fitness_network:

  auth-center:
    container_name: "${AUTH_CENTER_CONTAINER_NAME}"
    hostname: "${AUTH_CENTER_CONTAINER_NAME}"
    image: "ijohnnymiller/muscle-and-fitness-server.auth-center:${TAG}"
    depends_on:
      consul-service-registry:
        condition: service_started
    restart: always
    volumes:
      - "~/docker-file-mapping/${AUTH_CENTER_CONTAINER_NAME}:/logs"
    environment:
      JAVA_TOOL_OPTIONS: "${JAVA_TOOL_OPTIONS}"
      TZ: Asia/Hong_Kong
    networks:
      muscle_and_fitness_network:

  exercise-mis:
    container_name: "${EXERCISE_MIS_CONTAINER_NAME}"
    hostname: "${EXERCISE_MIS_CONTAINER_NAME}"
    image: "ijohnnymiller/muscle-and-fitness-server.exercise-mis:${TAG}"
    depends_on:
      consul-service-registry:
        condition: service_started
    restart: always
    volumes:
      - "~/docker-file-mapping/${EXERCISE_MIS_CONTAINER_NAME}:/logs"
    environment:
      JAVA_TOOL_OPTIONS: "${JAVA_TOOL_OPTIONS}"
      TZ: Asia/Hong_Kong
    networks:
      muscle_and_fitness_network:

  muscle-mis:
    container_name: "${MUSCLE_MIS_CONTAINER_NAME}"
    hostname: "${MUSCLE_MIS_CONTAINER_NAME}"
    image: "ijohnnymiller/muscle-and-fitness-server.muscle-mis:${TAG}"
    depends_on:
      consul-service-registry:
        condition: service_started
    restart: always
    volumes:
      - "~/docker-file-mapping/${MUSCLE_MIS_CONTAINER_NAME}:/logs"
    environment:
      JAVA_TOOL_OPTIONS: "${JAVA_TOOL_OPTIONS}"
      TZ: Asia/Hong_Kong
    networks:
      muscle_and_fitness_network:

networks:
  muscle_and_fitness_network:
    ipam:
      driver: default
