version: "3.7"

################################################################################
#                        ATTENTIONS of Docker Compose                          #
################################################################################
# 1. Pattern of 'container_name' must be:                                      #
#    [service-name]-[system-short-name]-[environment-alias]                    #
#    For instance, there is a 'MySQL service' for 'Muscle and Fitness Server', #
#    the 'container_name' must be: mysql-maf.dev.                              #
#    In Kubernetes, 'container_name' must not be set.                          #
# 2. ${TAG} is defined in file '.env'.                                         #
# 3. The differences between each environment docker-compose.yml:              #
#    a. Environmental suffix. There are 4 types of environmental suffix:       #
#       * '-dev_dkr'                                                           #
#       * '-test'                                                              #
#       * '-stage'                                                             #
#       * '-prod'                                                              #
#    b. 'subnet' and 'ipv4_address'.                                           #
# 4. IP range definition (for instance of 'development-docker'):               #
#    a. 172.16.1.10 ~ 172.16.1.19:  middleware of Muscle and Fitness           #
#    b. 172.16.1.19 ~ 172.16.1.253: microservice of Muscle and Fitness         #
#    c. 172.16.1.254:               gateway for Muscle and Fitness             #
#       CAUTION: 172.16.1.255 is not available for container.                  #
# 5. Conceal some service ports:                                               #
#    a. api-portal                                                             #
#    b. auth-center                                                            #
#    c. exercise-mis                                                           #
#    d. muscle-mis                                                             #
# 6. Define timezone for environment variable: Asia/Hong_Kong                  #
# 7. Define 'depends_on' for service                                           #
################################################################################

services:
  ################################################################################
  #                      Middleware of Muscle and Fitness                        #
  ################################################################################
  mysql:
    container_name: maf.mysql.dev
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: "jm@mysql"
      MYSQL_DATABASE: muscle_and_fitness
      TZ: Asia/Hong_Kong
    ports:
      - "3306:3306"
    restart: always
    volumes:
      - ~/docker-file-mapping/maf.mysql.development:/var/lib/mysql
      - ./script/mysql-init-script:/docker-entrypoint-initdb.d
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      muscle_and_fitness_network:

  redis:
    container_name: maf.redis.dev
    image: redis:latest
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - ~/docker-file-mapping/maf.redis.development:/data
      - ./script/redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      TZ: Asia/Hong_Kong
    command: "redis-server /usr/local/etc/redis/redis.conf"
    networks:
      muscle_and_fitness_network:

  atmoz-sftp:
    container_name: maf.atmoz-sftp.dev
    image: atmoz/sftp:latest
    ports:
      - "23:22"
    restart: always
    volumes:
      - ~/docker-file-mapping/maf.atmoz-sftp.development:/home/johnny/upload
    environment:
      TZ: Asia/Hong_Kong
    command: "johnny:atmoz@sftp:::upload"
    networks:
      muscle_and_fitness_network:

  zipkin-cassandra:
    image: openzipkin/zipkin-cassandra
    # Uncomment to use DSE instead (minimum version 5.1)
    # image: datastax/dse-server:5.1.20
    container_name: maf.zipkin-cassandra.dev
    environment:
      CASSANDRA_USERNAME: cassandra_admin
      CASSANDRA_PASSWORD: cassandra_password
    restart: always
    volumes:
      - ~/docker-file-mapping/maf.zipkin-cassandra.development:/cassandra/data
    # Uncomment to expose the storage port for testing
    # ports:
    #  - "9042:9042"
    networks:
      muscle_and_fitness_network:

  zipkin-dependencies:
    image: openzipkin/zipkin-dependencies
    container_name: maf.zipkin-dependencies.dev
    entrypoint: crond -f
    environment:
      # Uncomment to see dependency processing logs
      ZIPKIN_LOG_LEVEL: DEBUG
      STORAGE_TYPE: cassandra3
      CASSANDRA_USERNAME: cassandra_admin
      CASSANDRA_PASSWORD: cassandra_password
      CASSANDRA_CONTACT_POINTS: 172.16.1.13:9042
    depends_on:
      - zipkin-cassandra
    networks:
      muscle_and_fitness_network:

  open-zipkin:
    container_name: maf.open-zipkin.dev
    image: openzipkin/zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    depends_on:
      zipkin-cassandra:
        condition: service_healthy
    environment:
      STORAGE_TYPE: cassandra3
      CASSANDRA_CONTACT_POINTS: maf.zipkin-cassandra.dev:9042
      # Uncomment to configure authentication
      CASSANDRA_USERNAME: cassandra_admin
      CASSANDRA_PASSWORD: cassandra_password
      # Uncomment to enable request logging (TRACE shows query values)
      command: --logging.level.com.datastax.oss.driver.internal.core.tracker.RequestLogger=TRACE
      JAVA_OPTS: -Xms128m -Xmx128m -XX:+ExitOnOutOfMemoryError
      TZ: Asia/Hong_Kong
    # Uncomment to enable scribe
    # - SCRIBE_ENABLED=true
    # Uncomment to enable self-tracing
    # - SELF_TRACING_ENABLED=true
    # Uncomment to enable debug logging
    # - JAVA_OPTS=-Dlogging.level.zipkin2=DEBUG
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - 9411:9411
      # Uncomment if you set SCRIBE_ENABLED=true
      # - 9410:9410
    restart: always
    networks:
      muscle_and_fitness_network:

  ################################################################################
  #                     Microservice of Muscle and Fitness                       #
  ################################################################################
  #                            Infrastructure Service                            #
  #------------------------------------------------------------------------------#
  service-registry:
    container_name: maf.service-registry.dev
    image: "ijohnnymiller/muscle-and-fitness-server.service-registry:${TAG}"
    depends_on:
      open-zipkin:
        condition: service_healthy
    ports:
      - "8760:8760"
    restart: always
    volumes:
      - ~/docker-file-mapping/maf.logs:/logs
    environment:
      JAVA_TOOL_OPTIONS: -Xms128m -Xmx128m -Dspring.profiles.active=development-docker
      TZ: Asia/Hong_Kong
    networks:
      muscle_and_fitness_network:

  spring-boot-admin:
    container_name: maf.spring-boot-admin.dev
    image: "ijohnnymiller/muscle-and-fitness-server.spring-boot-admin:${TAG}"
    depends_on:
      service-registry:
        condition: service_started
    ports:
      - "8761:8761"
    volumes:
      - ~/docker-file-mapping/maf.logs:/logs
    environment:
      JAVA_TOOL_OPTIONS: -Xms128m -Xmx128m -Dspring.profiles.active=development-docker
      TZ: Asia/Hong_Kong
    networks:
      muscle_and_fitness_network:

  api-portal:
    container_name: maf.api-portal.dev
    image: "ijohnnymiller/muscle-and-fitness-server.api-portal:${TAG}"
    depends_on:
      mysql:
        condition: service_started
      redis:
        condition: service_started
      atmoz-sftp:
        condition: service_started
      service-registry:
        condition: service_started
    restart: always
    volumes:
      - ~/docker-file-mapping/maf.logs:/logs
    environment:
      JAVA_TOOL_OPTIONS: -Xms128m -Xmx128m -Dspring.profiles.active=development-docker
      TZ: Asia/Hong_Kong
    networks:
      muscle_and_fitness_network:

  ################################################################################
  #                     Microservice of Muscle and Fitness                       #
  ################################################################################
  #                              Business Service                                #
  #------------------------------------------------------------------------------#
  auth-center:
    container_name: maf.auth-center.dev
    image: "ijohnnymiller/muscle-and-fitness-server.auth-center:${TAG}"
    depends_on:
      mysql:
        condition: service_started
      service-registry:
        condition: service_started
    restart: always
    volumes:
      - ~/docker-file-mapping/maf.logs:/logs
    environment:
      JAVA_TOOL_OPTIONS: -Xms128m -Xmx128m -Dspring.profiles.active=development-docker
      TZ: Asia/Hong_Kong
    networks:
      muscle_and_fitness_network:

  exercise-mis:
    container_name: maf.exercise-mis.dev
    image: "ijohnnymiller/muscle-and-fitness-server.exercise-mis:${TAG}"
    depends_on:
      mysql:
        condition: service_started
      service-registry:
        condition: service_started
    restart: always
    volumes:
      - ~/docker-file-mapping/maf.logs:/logs
    environment:
      JAVA_TOOL_OPTIONS: -Xms128m -Xmx128m -Dspring.profiles.active=development-docker
      TZ: Asia/Hong_Kong
    networks:
      muscle_and_fitness_network:

  muscle-mis:
    container_name: maf.muscle-mis.dev
    image: "ijohnnymiller/muscle-and-fitness-server.muscle-mis:${TAG}"
    depends_on:
      mysql:
        condition: service_started
      service-registry:
        condition: service_started
    restart: always
    volumes:
      - ~/docker-file-mapping/maf.logs:/logs
    environment:
      JAVA_TOOL_OPTIONS: -Xms128m -Xmx128m -Dspring.profiles.active=development-docker
      TZ: Asia/Hong_Kong
    networks:
      muscle_and_fitness_network:

  ################################################################################
  #                       Gateway for Muscle and Fitness                         #
  ################################################################################
  gateway:
    container_name: maf.gateway.dev
    image: "ijohnnymiller/muscle-and-fitness-server.gateway:${TAG}"
    depends_on:
      service-registry:
        condition: service_started
    ports:
      - "8080:8080"
    restart: always
    volumes:
      - ~/docker-file-mapping/maf.logs:/logs
    environment:
      JAVA_TOOL_OPTIONS: -Xms128m -Xmx128m -Dspring.profiles.active=development-docker
      TZ: Asia/Hong_Kong
    networks:
      muscle_and_fitness_network:

################################################################################
#                       Network for Muscle and Fitness                         #
################################################################################
networks:
  muscle_and_fitness_network:
    ipam:
      driver: default
#      config:
        # Private Network (20-bit block): https://en.wikipedia.org/wiki/Private_network
        # IP range of the private network: https://ipgeolocation.io/browse/ipv4/172.16.1.0/24
#        - subnet: "172.16.1.0/24"
