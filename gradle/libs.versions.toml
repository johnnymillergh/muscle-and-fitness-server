# https://docs.gradle.org/current/userguide/platforms.html#sub:conventional-dependencies-toml

[versions]
# https://github.com/gradle/gradle/releases/tag/v8.4
gradle = "8.4"
javaVendor = "BellSoft"
# https://github.com/adoptium/temurin17-binaries/releases/tag/jdk-17.0.5%2B8
javaVersion = "21"
# Don't use alpine or slim version, https://hub.docker.com/r/bellsoft/liberica-runtime-container/tags?page=1&name=jre-21
# docker pull bellsoft/liberica-runtime-container:jre-21-cds-musl
jreImage = "bellsoft/liberica-runtime-container"
jreTag = "jre-21-cds-musl"
dockerHubRepositoryPrefix = "docker.io/ijohnnymiller/"
sas = "0.4.0"
spring-boot-admin = "3.0.4"
springdoc = "2.2.0"
knife4j = "3.0.3"
logstash = "7.4"
minio = "8.4.6"
tika = "2.6.0"
guava = "32.1.3-jre"
hutool = "5.8.23"
mapstruct = "1.5.5.Final"
mybatis-plus = "3.5.3.1"
# ShardingSphere uses snakeyaml 1.3.3, yet Spring Boot only depends on 1.3.0
# https://www.cnblogs.com/fairjm/p/16860466.html
shardingsphere = "5.2.1"
snakeyaml = "1.33"
jjwt = "0.11.5"
poi = "5.2.5"
kotlin = "1.9.21"
spring-boot = "3.2.0"
spring-cloud = "2022.0.4"
spring-dependency-management = "1.1.4"
jib = "3.3.2"
git-version = "0.15.0"
versions = "0.42.0"
# https://github.com/kordamp/enforcer-gradle-plugin/
# https://kordamp.org/enforcer-gradle-plugin/
project-enforcer = "0.13.0"

[libraries]
spring-boot-bom = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "spring-boot" }
spring-cloud-bom = { module = "org.springframework.cloud:spring-cloud-dependencies", version.ref = "spring-cloud" }
spring-authorization-server = { module = "org.springframework.security:spring-security-oauth2-authorization-server", version.ref = "sas" }
spring-boot-admin-client = { module = "de.codecentric:spring-boot-admin-starter-client", version.ref = "spring-boot-admin" }
spring-boot-admin-server = { module = "de.codecentric:spring-boot-admin-starter-server", version.ref = "spring-boot-admin" }
springdoc-openapi-starter-webmvc-ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc" }
springdoc-openapi-starter-webflux-ui = { module = "org.springdoc:springdoc-openapi-starter-webflux-ui", version.ref = "springdoc" }
springdoc-openapi-starter-common = { module = "org.springdoc:springdoc-openapi-starter-common", version.ref = "springdoc" }
# TODO: upgrade Knife4j to 4.0.0, https://doc.xiaominfo.com/docs/quick-start#spring-boot-3
knife4j = { module = "com.github.xiaoymin:knife4j-springdoc-ui", version.ref = "knife4j" }
logstash-logback-encoder = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logstash" }
minio = { module = "io.minio:minio", version.ref = "minio" }
tika-core = { module = "org.apache.tika:tika-core", version.ref = "tika" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
hutool = { module = "cn.hutool:hutool-all", version.ref = "hutool" }
mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }
mybatis-plus = { module = "com.baomidou:mybatis-plus-boot-starter", version.ref = "mybatis-plus" }
shardingsphere = { module = "org.apache.shardingsphere:shardingsphere-jdbc-core-spring-boot-starter", version.ref = "shardingsphere" }
snakeyaml = { module = "org.yaml:snakeyaml", version.ref = "snakeyaml" }
jjwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jjwt" }
jjwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jjwt" }
jjwt-jackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "jjwt" }
poi = { module = "org.apache.poi:poi", version.ref = "poi" }
poi-ooxml = { module = "org.apache.poi:poi-ooxml", version.ref = "poi" }

[bundles]

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-plugin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-plugin-allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }
jib = { id = "com.google.cloud.tools.jib", version.ref = "jib" }
git-version = { id = "com.palantir.git-version", version.ref = "git-version" }
versions = { id = "com.github.ben-manes.versions", version.ref = "versions" }
project-enforcer = { id = "org.kordamp.gradle.project-enforcer", version.ref = "project-enforcer" }
