server:
  port: @auth-center.port@
  tomcat:
    uri-encoding: @project.build.sourceEncoding@
  shutdown: GRACEFUL
  servlet:
    context-path:

spring:
  application:
    name: @project.parent.artifactId@
  profiles:
    active: @environment@
  config:
    import: consul:${spring.cloud.consul.host}:${spring.cloud.consul.port}
  cloud:
    # https://docs.spring.io/spring-cloud-consul/docs/current/reference/html/index.html#spring-cloud-consul-config
    consul:
      host: "should-be-passed-by-java-opts"
      port: 8500
      config:
        # `default-context` should not be modified, keeps "application" for common configuration.
        # Properties in the config/application folder are applicable to all applications using consul for configuration.
        profile-separator: "@"
        format: YAML
        data-key: "data"
        watch:
          enabled: true
          delay: 1000
        prefixes:
          - config
      discovery:
        register: true
        instance-id: ${spring.application.name}-${spring.cloud.client.hostname}-${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
        service-name: ${spring.application.name}
        port: ${server.port}
        prefer-ip-address: true
        ip-address: ${spring.cloud.client.ip-address}
        health-check-critical-timeout: 15s
  servlet:
    multipart:
      # `location` specifies the directory where uploaded files will be stored. When not specified,
      # a temporary directory will be used. ATTENTION: it may differ due to OS.
      location: @project.parent.artifactId@/${spring.application.name}/temprary-file
      # `max-file-size` specifies the maximum size permitted for uploaded files. The default is 1MB. We set it as 64 MB.
      max-file-size: 64MB
      # `max-request-size` specifies the maximum size allowed for multipart/form-data requests. The default is 10MB.
      max-request-size: 70MB
      # `file-size-threshold` specifies the size threshold after which files will be written to disk.
      # The default is 0. We set it as 0 too.
      file-size-threshold: 0
  shardingsphere:
    props:
      sql-show: true
    datasource:
      master0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/muscle_and_fitness?useSSL=true&useUnicode=true
        username: maf_mysql_rw
        password: maf@mysql
      slave0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3307/muscle_and_fitness?useSSL=true&useUnicode=true
        username: maf_mysql_r
        password: maf@mysql
      quartz:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/QUARTZ_DB?useSSL=true&useUnicode=true
        username: maf_mysql_rw
        password: maf@mysql
      names: master0,slave0,quartz
    rules:
      readwrite-splitting:
        data-sources:
          readwrite-data-sources:
            type: Static
            props:
              write-data-source-name: master0
              read-data-source-names: slave0
            load-balancer-name: readwrite-load-balancer
        load-balancers:
          readwrite-load-balancer:
            type: ROUND_ROBIN
      sharding:
        key-generators:
          snowflake:
            type: SNOWFLAKE
        sharding-algorithms:
          user-sharding:
            type: INLINE
            props:
              algorithm-expression: user_$->{id % 2}
        tables:
          user:
            actual-data-nodes: readwrite-data-sources.user_$->{0..1}
            table-strategy:
              standard:
                sharding-column: id
                sharding-algorithm-name: user-sharding
            keyGenerateStrategy:
              column: id
              keyGeneratorName: snowflake

logging:
  config: classpath:logback-configuration/logback-${spring.profiles.active}.xml
  level:
    org.springframework.data.elasticsearch.client.WIRE: DEBUG

maf:
  project-properties:
    base-package: @project.groupId@
    context-path: ${server.servlet.context-path}
    group-id: @project.groupId@
    project-parent-artifact-id: @project.parent.artifactId@
    project-artifact-id: @project.parent.artifactId@
    version: @project.version@
    description: @project.description@
    jdk-version: @java.version@
    environment: ${spring.profiles.active}
    url: @project.url@
    inception-year: @inceptionYear@
    organization-name: @project.organization.name@
    organization-url: @project.organization.url@
    issue-management-system: @project.issueManagement.system@
    issue-management-url: @project.issueManagement.url@
    developer-name: @developerName@
    developer-email: @developerEmail@
    developer-url: @developerUrl@
  configuration:
    ignored-url:
      pattern:
        - "/static/**"
        - "/actuator/**"
        - "/druid/**"
        - "/swagger-resources/**"
        - "/v2/api-docs/**"
        - "/*/v2/api-docs/**"
        - "/webjars/**"
        - "/doc.html"
    included-package-for-http-api-scan: ${maf.project-properties.base-package}
    jwt:
      # an hour
      ttl: 3600000
