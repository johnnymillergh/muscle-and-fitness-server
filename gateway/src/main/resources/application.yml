server:
  port: @port@
  tomcat:
    uri-encoding: @project.build.sourceEncoding@

spring:
  application:
    name: @project.artifactId@
  profiles:
    active: @env@
  mvc:
    throw-exception-if-no-handler-found: true
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: Asia/Hong_Kong
  sleuth:
    sampler:
      probability: 1.0
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true

eureka:
  instance:
    leaseRenewalIntervalInSeconds: 10
    health-check-url-path: /actuator/health
    status-page-url-path: /
    metadata-map:
      # needed to trigger info and endpoint update after restart
      startup: ${random.int}
    instance-id: ${spring.cloud.client.ip-address}:${server.port}@${spring.cloud.client.hostname}@${spring.application.name}-${random.int}
    prefer-ip-address: true
  client:
    registryFetchIntervalSeconds: 5

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS

logging:
  config: classpath:configuration/logback/logback-@env@.xml
  # Configure logging level of project as DEBUG to enable SQL logging and other logging.
  level:
    com.jmsoftware: DEBUG
#    org.springframework.cloud.gateway: debug

project:
  property:
    base-package: com.jmsoftware.maf.gateway
    context-path:
    group-id: @project.groupId@
    parent-artifact-id: @project.parent.artifactId@
    project-artifact-id: @project.artifactId@
    version: @project.version@
    description: @project.description@
    jdk-version: @java.version@
    environment: @env@
    environment-alias: @envAlias@
    url: @project.url@
    inception-year: @inceptionYear@
    organization-name: @project.organization.name@
    organization-url: @project.organization.url@
    issue-management-system: @project.issueManagement.system@
    issue-management-url: @project.issueManagement.url@
    developer-name: @developerName@
    developer-email: @developerEmail@
    developer-url: @developerUrl@
